# =============================================================================
# BotPhia Trading Platform - Environment Configuration Template
# =============================================================================
# Copy this file to .env and configure with your actual values
# SECURITY: Never commit .env to version control!

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================

# JWT Secret Key - CRITICAL: Change this to a strong, unique secret in production
# Must be at least 32 characters long and cryptographically secure
JWT_SECRET_KEY=your_super_secure_jwt_secret_key_minimum_32_characters_change_in_production

# Optional: Encryption key for storing sensitive secrets encrypted
# If not provided, a new one will be generated (save it!)
# ENCRYPTION_KEY=your_base64_encryption_key_for_sensitive_data

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary database URL (Production: PostgreSQL, Development: SQLite)
# Examples:
#   PostgreSQL: postgresql://user:password@localhost:5432/botphia_db
#   SQLite: sqlite:///./trading_bot.db
# DATABASE_URL=postgresql://user:password@localhost:5432/botphia_db

# Fallback: SQLite database file path (used if DATABASE_URL not set)
DATABASE_PATH=trading_bot.db

# =============================================================================
# BINANCE API CONFIGURATION
# =============================================================================

# Binance API credentials (leave empty for demo mode)
# Get these from https://www.binance.com/en/my/settings/api-management
BINANCE_API_KEY=your_binance_api_key_64_characters_minimum
BINANCE_SECRET_KEY=your_binance_secret_key_64_characters_minimum

# Testnet mode (true for testing, false for live trading)
# CRITICAL: Always use testnet=true for development!
BINANCE_TESTNET=true

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment
ENVIRONMENT=development

# Debug mode (enable detailed logging and error traces)
DEBUG=false

# CORS allowed origins (comma-separated list)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8000

# =============================================================================
# RATE LIMITING & USER LIMITS
# =============================================================================

# Enable API rate limiting
RATE_LIMIT_ENABLED=true

# Maximum positions per user
MAX_POSITIONS_PER_USER=10

# Maximum daily trades per user
MAX_DAILY_TRADES=50

# =============================================================================
# DEMO/TESTING CONFIGURATION
# =============================================================================

# Demo user password for internal testing
DEMO_PASSWORD=SecureDemo2025!

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Redis URL for caching and session storage (optional)
# REDIS_URL=redis://localhost:6379/0

# Email service configuration (for alerts and reports)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# EMAIL_FROM=noreply@botphia.com

# Telegram bot configuration (for notifications)
# TELEGRAM_BOT_TOKEN=your_telegram_bot_token
# TELEGRAM_CHAT_ID=your_chat_id

# Discord webhook (for alerts)
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your_webhook_url

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/botphia.log

# Enable structured JSON logging
JSON_LOGGING=false

# Prometheus metrics endpoint
METRICS_ENABLED=true
METRICS_PORT=9090

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================

# Default trading pair
DEFAULT_SYMBOL=BTCUSDT

# Minimum order size (in USDT)
MIN_ORDER_SIZE=10.0

# Maximum order size (in USDT)
MAX_ORDER_SIZE=1000.0

# Risk management - maximum portfolio risk per trade (as percentage)
MAX_RISK_PER_TRADE=2.0

# Stop loss percentage
DEFAULT_STOP_LOSS=3.0

# Take profit percentage
DEFAULT_TAKE_PROFIT=6.0

# =============================================================================
# ADVANCED FEATURES
# =============================================================================

# Enable paper trading mode (simulate trades without real money)
PAPER_TRADING=true

# Enable webhook notifications
WEBHOOK_ENABLED=false
WEBHOOK_URL=https://your-webhook-endpoint.com/notify

# Enable backtesting features
BACKTESTING_ENABLED=true

# =============================================================================
# PRODUCTION DEPLOYMENT
# =============================================================================

# Server configuration
HOST=0.0.0.0
PORT=8000

# Number of worker processes
WORKERS=1

# Worker timeout (seconds)
WORKER_TIMEOUT=120

# Keep-alive timeout
KEEP_ALIVE=2

# Maximum requests per worker
MAX_REQUESTS=1000

# =============================================================================
# NOTES
# =============================================================================
# 1. Always use strong, unique secrets in production
# 2. Encrypt sensitive values using the SecretManager.encrypt_secret() method
# 3. Regularly rotate API keys and secrets
# 4. Monitor access logs for security audit
# 5. Never expose this configuration in client-side code
# 6. Use environment-specific .env files (.env.dev, .env.prod, etc.)